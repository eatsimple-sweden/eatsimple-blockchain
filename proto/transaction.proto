syntax = "proto3";

package eatsimple_blockchain;

// writer → sequencer
service IngestService {
	rpc Ingest (TxRequest) returns (IngestResponse);
}

// sequencer → witness
service WitnessService {
	rpc Propose (BlockProposal) returns (ProposeResponse);
}

message TxRequest {
	string node_uuid   = 1;   	// UUID assigned in enrollment
	int64  timestamp   = 2;   	// Unix-epoch milliseconds
	bytes  payload     = 3;   	// opaque application data
	bytes  signature   = 4;   	// Ed25519 sig over (node_uuid || timestamp || payload)
}

message IngestResponse {
	bool   ok         = 1;
	string message    = 2;		// “queued”, “bad-sig”, etc.
}

message BlockProposal {
	BlockHeader 	header 		= 1;
	bytes        	signature 	= 2;
}
  
message ProposeResponse {
	bool    ok         = 1;
	string  error      = 2;   // empty if ok
	bytes   signature  = 3;   // Ed25519 signature from the witness
	string  node_uuid  = 4;   // which witness signed
}
  
message BlockHeader {
	uint64 	height        = 1;
	bytes  	prev_hash     = 2;
	bytes  	merkle_root   = 3;
	int64  	timestamp_ms  = 4;
	uint32 	entries       = 5;
}