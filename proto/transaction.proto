syntax = "proto3";

package eatsimple_blockchain;

// writer -> sequencer
service IngestService {
	rpc Ingest (TxRequest) returns (IngestResponse);
}

// sequencer -> witness
service WitnessService {
	rpc Propose (BlockProposal) returns (ProposeResponse);
}

message TxRequest {
	string        	node_uuid     	= 1;	// signer
	int64         	timestamp_ms  	= 2;
	bytes         	public_json   	= 3;	// canonical UTF-8 JSON
	bytes         	nonce         	= 4;	// 12-byte AES-GCM-SIV nonce
	bytes         	cipher_bytes  	= 5;	// raw ciphertext
	bytes         	cipher_hash   	= 6;	// 32 B BLAKE3
	repeated bytes 	index_tokens 	= 7;	// each 32 B Poseidon hash
	bytes         	signature     	= 8;	// 64 B Ed25519
}

message IngestResponse {
	bool   ok         = 1;
	string message    = 2;		// “queued”, “bad-sig”, etc.
}

message BlockProposal {
	BlockHeader 	header 		= 1;
	bytes        	signature 	= 2;
}

message BlockHeader {
	uint64 	height        = 1;
	bytes  	prev_hash     = 2;
	bytes  	merkle_root   = 3;
	int64  	timestamp_ms  = 4;
	uint32 	entries       = 5;
}
  
message ProposeResponse {
	bool    ok         = 1;
	string  error      = 2;   // empty if ok
	bytes   signature  = 3;   // Ed25519 signature from the witness
	string  node_uuid  = 4;   // which witness signed
}